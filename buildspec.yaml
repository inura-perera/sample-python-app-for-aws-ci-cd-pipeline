version: 0.1
component: build
shell: bash

steps:
  - type: Command
    name: Install dependencies
    command: |
      pip install -r requirements.txt

  - type: Command
    name: Run tests
    command: |
      echo "Running tests..."
      # Add test commands here if needed

  - type: Command
    name: Docker login
    command: |
      echo "$PASSWORD_OCIR" | docker login dxb.ocir.io -u "$USERNAME_OCIR" --password-stdin

  - type: Command
    name: Build Docker image
    timeoutInSeconds: 900
    command: |
      docker build -t dxb.ocir.io/ax6enss1ld89/demo:latest .

  - type: Command
    name: Push Docker image
    timeoutInSeconds: 600
    command: |
      docker push dxb.ocir.io/ax6enss1ld89/demo:latest

  - type: Command
    name: Generate artifact files
    command: |
      echo "dxb.ocir.io/ax6enss1ld89/demo:latest" > image.txt
      
      echo '#!/bin/bash' > deploy.sh
      echo 'set -e' >> deploy.sh
      echo '' >> deploy.sh
      echo 'IMAGE=$(cat image.txt)' >> deploy.sh
      echo '' >> deploy.sh
      echo 'echo "Deploying container..."' >> deploy.sh
      echo 'docker pull "$IMAGE"' >> deploy.sh
      echo 'docker stop python-flask-app || true' >> deploy.sh
      echo 'docker rm python-flask-app || true' >> deploy.sh
      echo 'docker run -d --name python-flask-app -p 5000:5000 "$IMAGE"' >> deploy.sh

      chmod +x deploy.sh

outputArtifacts:
  - name: image
    type: BINARY
    location: image.txt

  - name: deploy-script
    type: BINARY
    location: deploy.sh
